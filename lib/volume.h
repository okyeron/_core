#ifndef VOLUME_H
#define VOLUME_H 1

/*
(
var divisor = 2048;
var start = -36;
var start2 = -57;
var end = 0;
var numberOfSteps = 192;
var cutoff = 160;
var increment = (end-start)/numberOfSteps;
var increment2 = (end-start2)/numberOfSteps;
var array = Array.series(numberOfSteps+1, start, increment);
var array2 = Array.series(numberOfSteps+1, start2, increment2);
array.postln;
("#define VOLUME_DIVISOR "++divisor.asInteger).postln;
("#define VOLUME_STEPS "++numberOfSteps.asInteger).postln;
("const int32_t volume_vals["++numberOfSteps.asInteger++"] = {").postln;
array.do({ arg v,i;
        if (i<1,{
                "0,".postln;
        },{
                if (i<cutoff,{
                        v = (array2[i] * (cutoff-i) / cutoff) + (v *i / cutoff);
                });
                (((200*(v.dbamp)*divisor).round.asInteger.asString)++",").postln;

        });
});
"};".postln;
)
*/
#define VOLUME_DIVISOR_0_200 2048
#define VOLUME_STEPS 192
const int32_t volume_vals[193] = {
    0,      315,    638,    670,    704,    739,    775,    814,    854,
    896,    940,    986,    1034,   1084,   1136,   1191,   1248,   1307,
    1370,   1435,   1502,   1573,   1647,   1724,   1805,   1889,   1976,
    2067,   2162,   2261,   2365,   2472,   2584,   2701,   2823,   2949,
    3081,   3218,   3361,   3509,   3664,   3824,   3991,   4165,   4346,
    4533,   4728,   4931,   5142,   5360,   5588,   5823,   6068,   6322,
    6586,   6860,   7144,   7438,   7744,   8060,   8389,   8729,   9082,
    9447,   9826,   10218,  10624,  11045,  11480,  11931,  12397,  12880,
    13379,  13895,  14430,  14982,  15553,  16143,  16753,  17384,  18035,
    18707,  19402,  20119,  20860,  21624,  22413,  23227,  24067,  24933,
    25827,  26748,  27697,  28676,  29685,  30724,  31795,  32898,  34034,
    35203,  36407,  37646,  38922,  40234,  41584,  42972,  44400,  45868,
    47377,  48927,  50521,  52159,  53841,  55568,  57342,  59163,  61033,
    62951,  64920,  66940,  69012,  71136,  73315,  75548,  77837,  80183,
    82587,  85049,  87571,  90153,  92797,  95504,  98274,  101108, 104008,
    106974, 110008, 113109, 116280, 119521, 122832, 126216, 129673, 133203,
    136808, 140488, 144244, 148078, 151989, 155980, 160050, 164200, 168431,
    172744, 177140, 181619, 186182, 190830, 195563, 200381, 205286, 209766,
    214343, 219021, 223800, 228684, 233674, 238773, 243983, 249307, 254748,
    260306, 265987, 271791, 277722, 283782, 289975, 296302, 302768, 309375,
    316126, 323024, 330073, 337276, 344635, 352156, 359840, 367693, 375716,
    383915, 392292, 400853, 409600,
};

#endif